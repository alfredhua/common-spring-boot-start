buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'maven' // 引入maven插件
//apply plugin: 'org.springframework.boot'

group 'test.common'
version '1.0.0'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}
ext{
    lombokVersion="1.16.18"
    springBootVersion = "2.1.3.RELEASE"
    httpclientVersion="4.5.1"
    mailVersion="1.4"
    fastJsonVersion="1.2.51"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
    compile("org.projectlombok:lombok:$lombokVersion")
    compile("org.apache.httpcomponents:httpclient:$httpclientVersion")
    compile ("javax.mail:mail:$mailVersion")
    compile("com.alibaba:fastjson:$fastJsonVersion")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

//bootJar {
//    baseName = 'common-spring-boot-start'
//    version = "1.0.0"
//    manifest {
//        attributes 'Start-Class': 'com.common.CommonCore'
//    }
//}

// 指定上传的路径
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

// 上传Task，Gradle会生成并上传pom.xml文件。
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: localMavenRepo)

            //构造项目的Pom文件
            pom.project {
                name = project.name
                packaging = 'jar'
                description = 'description'
            }
        }

    }
}
defaultTasks 'clean','uploadArchives'